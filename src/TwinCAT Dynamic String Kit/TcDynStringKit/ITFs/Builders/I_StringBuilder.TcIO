<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <Itf Name="I_StringBuilder" Id="{0720aa24-e3c8-41ae-a5a5-43696928f33d}">
    <Declaration><![CDATA[INTERFACE I_StringBuilder EXTENDS I_QueryInterface
]]></Declaration>
    <Method Name="Append" Id="{19b8fae6-09f3-4d84-ae29-bb5020725b33}">
      <Declaration><![CDATA[// Appends the given string to the end of the string builder's contents.
METHOD Append : I_StringBuilder
VAR_INPUT
	sValue : T_LongString;
END_VAR]]></Declaration>
    </Method>
    <Method Name="AppendAny" Id="{48ff2b13-1615-43d0-8ea1-f6da83400a8a}">
      <Declaration><![CDATA[// Appends the given value to the end of the string builder's contents.
METHOD AppendAny : I_StringBuilder
VAR_INPUT
	Value : ANY;
END_VAR]]></Declaration>
    </Method>
    <Method Name="AppendBuffer" Id="{701bace9-44d5-460e-854d-cf9549386309}">
      <Declaration><![CDATA[// !!!UNSAFE!!! THIS WILL APPEND UP TO THE NULL CHARACTER. IF NO NULL EXISTS, THIS WILL RUN FOREVER!
// | Append raw values directly to the internal string buffer. This is meant for appending dynamic strings to the string builder.
METHOD AppendBuffer : I_StringBuilder
VAR_INPUT
	pBuffer : POINTER TO BYTE;
END_VAR]]></Declaration>
    </Method>
    <Method Name="AppendLine" Id="{553d213b-d668-4f2a-9e90-9a4310ae582e}">
      <Declaration><![CDATA[// Appends a new line (\r\n or $r$n) to string builder's contents.
METHOD AppendLine : I_StringBuilder]]></Declaration>
    </Method>
    <Method Name="BTrim" Id="{65ee4383-2186-4cf2-ab1a-96bd0bd788c6}">
      <Declaration><![CDATA[// Removes all ASCII white space (spaces, tabs, carriage returns, and linefeeds) from the beginning and end of string in the string builder
METHOD BTrim : I_StringBuilder]]></Declaration>
    </Method>
    <Property Name="Capacity" Id="{ba2a03c7-3755-45be-9ba0-4cd7e9d4b654}">
      <Declaration><![CDATA[// Number of bytes allocated in memory for the string builder's contents.
PROPERTY Capacity : T_Size]]></Declaration>
      <Get Name="Get" Id="{8b2c5724-7fcd-4312-ad6e-a12bb686f67a}">
        <Declaration><![CDATA[]]></Declaration>
      </Get>
    </Property>
    <Method Name="Clear" Id="{32a55980-f511-4d0d-a0d0-7301b9fbdbb4}">
      <Declaration><![CDATA[// Empties the string builder's contents, resetting its length to zero.
METHOD Clear : I_StringBuilder]]></Declaration>
    </Method>
    <Method Name="CopySubstringTo" Id="{4c3595ba-6ba9-4731-ae1c-879194d0db68}">
      <Declaration><![CDATA[// Copies a subset of characters in the string builder from specified position at specified length to a string
METHOD CopySubstringTo : I_StringBuilder
VAR_INPUT
	Position, Length : T_Size;
	Value : ANY;
END_VAR]]></Declaration>
    </Method>
    <Method Name="CopyTo" Id="{49378fb5-1ade-4d07-8b6c-a6431d528a2f}">
      <Declaration><![CDATA[// Copies contents of string builder to given string of any size
METHOD CopyTo : I_StringBuilder
VAR_INPUT
	Value : ANY;
END_VAR]]></Declaration>
    </Method>
    <Method Name="GetBuffer" Id="{63f9469e-26fb-436a-960f-f6adebffafe5}">
      <Declaration><![CDATA[// !!!UNSAFE!!! DON'T FORGET TO RELEASE/DELETE FROM	MEMORY WHEN DONE!
// | Get a copy of the internal string buffer at the size of the string length + 1.
METHOD GetBuffer : I_StringBuilder
VAR_IN_OUT
	pBuffer : POINTER TO BYTE;
END_VAR
]]></Declaration>
    </Method>
    <Method Name="GetCapacity" Id="{71cbf03d-e226-420a-834e-72ffc3932270}">
      <Declaration><![CDATA[// Retrieves the number of bytes allocated in memory for the string builder's contents.
METHOD GetCapacity : I_StringBuilder
VAR_OUTPUT
	Capacity : T_Size;
END_VAR]]></Declaration>
    </Method>
    <Method Name="GetChar" Id="{3e52b663-ff3f-47bb-b31c-eb04589f1b2c}">
      <Declaration><![CDATA[// Gets character at specified position in the string builder
METHOD GetChar : T_Char
VAR_INPUT
	Position : T_Size;
END_VAR
]]></Declaration>
    </Method>
    <Method Name="GetLength" Id="{4d75dca5-6846-48de-9ae9-a24748a2ac1e}">
      <Declaration><![CDATA[// Retrieves the current size of string builder contents
METHOD GetLength : I_StringBuilder
VAR_OUTPUT
	Length : T_Size;
END_VAR]]></Declaration>
    </Method>
    <Method Name="GetString" Id="{8301de19-c685-4e69-9b85-2430eb94ce14}">
      <Declaration><![CDATA[// Converts contents of string builder to string and returns them
METHOD GetString : T_LongString
VAR_INPUT
END_VAR
]]></Declaration>
    </Method>
    <Method Name="GetSubstring" Id="{8a394a0a-1e9a-42e5-9e2d-10f694d3cc8b}">
      <Declaration><![CDATA[// Get a subset of characters in the string builder from specified position at specified length and returns them as a string
METHOD GetSubstring : T_LongString
VAR_INPUT
	Position, Length : T_Size;
END_VAR]]></Declaration>
    </Method>
    <Method Name="Insert" Id="{05c3b0b6-cd11-49d2-991c-d9cf83dd2683}">
      <Declaration><![CDATA[// Inserts the given string at the specified position.
METHOD Insert : I_StringBuilder
VAR_INPUT
	Position : T_Size;
	sValue : T_LongString;
END_VAR]]></Declaration>
    </Method>
    <Method Name="InsertAny" Id="{a5d890d0-ef2b-486c-9e2b-33a80ca46291}">
      <Declaration><![CDATA[// Inserts the given value at the specified position.
METHOD InsertAny : I_StringBuilder
VAR_INPUT
	Position : T_Size;
	Value : ANY;
END_VAR
]]></Declaration>
    </Method>
    <Method Name="InsertBuffer" Id="{bace6fdb-8718-48f8-aa66-cd4b176d295e}">
      <Declaration><![CDATA[// !!!UNSAFE!!! THIS WILL INSERT UP TO THE NULL CHARACTER. IF NO NULL EXISTS, THIS WILL RUN FOREVER!
// | Inserts raw values directly to the internal string buffer at the specified position. This is meant for inserting dynamic strings to the string builder.
METHOD InsertBuffer : I_StringBuilder
VAR_INPUT
	Position : T_Size;
	pBuffer : POINTER TO BYTE;
END_VAR]]></Declaration>
    </Method>
    <Method Name="Join" Id="{d0a233f9-ffd4-4203-a624-e6d118b02fac}">
      <Declaration><![CDATA[// Joins/Merges the string contents of the current string builder with that on the specified string builder at the specified position
METHOD Join : I_StringBuilder
VAR_INPUT
	Position : T_Size;
	ipString_Builder : I_StringBuilder;
END_VAR]]></Declaration>
    </Method>
    <Property Name="Length" Id="{17c1e06b-941b-4841-91af-8cf372a9402d}">
      <Declaration><![CDATA[// Current size of string builder contents
PROPERTY Length : T_Size]]></Declaration>
      <Get Name="Get" Id="{30c9a3b2-a463-49ec-9f49-8a6f9e9842d0}">
        <Declaration><![CDATA[]]></Declaration>
      </Get>
    </Property>
    <Method Name="LTrim" Id="{5f1dd085-6cb5-4b34-aa63-842e2e6b9c9f}">
      <Declaration><![CDATA[// Removes all ASCII white space (spaces, tabs, carriage returns, and linefeeds) from the beginning of string in the string builder
METHOD LTrim : I_StringBuilder
VAR_INPUT
END_VAR
]]></Declaration>
    </Method>
    <Method Name="Remove" Id="{812add6f-98c2-4955-8bd6-1a170155baf7}">
      <Declaration><![CDATA[// Removes the characters in the string builder from specified position at specified length.
METHOD Remove : I_StringBuilder
VAR_INPUT
	Position, Length : T_Size;
END_VAR]]></Declaration>
    </Method>
    <Method Name="Replace" Id="{e7e1e1b7-6e39-4983-8c57-829e9b04283e}">
      <Declaration><![CDATA[// Replaces the instance of the old string in the string builder with the new string.
// If bReplace_All = TRUE, all instances of the old string are placed, else only the first instance.
METHOD Replace : I_StringBuilder
VAR_INPUT
	sOld_Value,
	sNew_Value : T_LongString;
	bReplace_All : BOOL;
END_VAR
]]></Declaration>
    </Method>
    <Method Name="ReplaceAny" Id="{4aca1964-ebf7-4a81-bf85-1203ad4e0c3d}">
      <Declaration><![CDATA[// Replaces the instance of the old value in the string builder with the new value.
// If bReplace_All = TRUE, all instances of the old value are placed, else only the first instance.
METHOD ReplaceAny : I_StringBuilder
VAR_INPUT
	Old_Value : ANY;
	New_Value : ANY;
	bReplace_All : BOOL;
END_VAR]]></Declaration>
    </Method>
    <Method Name="Reverse" Id="{d87f1fbf-11bb-4f80-9977-10b6848e2685}">
      <Declaration><![CDATA[// Reverses the string contents in the string builder
METHOD Reverse : I_StringBuilder
VAR_INPUT
END_VAR
]]></Declaration>
    </Method>
    <Method Name="RTrim" Id="{1a55735a-28ae-4c80-a2c2-75ea01d82ae7}">
      <Declaration><![CDATA[// Removes all ASCII white space (spaces, tabs, carriage returns, and linefeeds) from the end of string in the string builder
METHOD RTrim : I_StringBuilder
VAR_INPUT
END_VAR
]]></Declaration>
    </Method>
    <Method Name="Search" Id="{745197dc-b26d-4ce6-a64b-6e5f96d9b7bd}">
      <Declaration><![CDATA[// Finds the position of the first instance of a given string in the content's of the string builder from a starting position
METHOD Search : I_StringBuilder
VAR_INPUT
	sValue : T_LongString;
	Start_Position : T_Size;
END_VAR
VAR_OUTPUT
	Position : T_Size;
END_VAR]]></Declaration>
    </Method>
    <Method Name="SearchAny" Id="{123176dc-8ab6-4b6d-8fc6-479209e1aa55}">
      <Declaration><![CDATA[// Finds the position of the first instance of a given value in the content's of the string builder from a starting position
METHOD SearchAny : I_StringBuilder
VAR_INPUT
	Value : ANY;
	Start_Position : T_Size;
END_VAR
VAR_OUTPUT
	Position : T_Size;
END_VAR]]></Declaration>
    </Method>
    <Method Name="Split" Id="{d9a27e86-600a-4dac-a484-7322fdc46d5c}">
      <Declaration><![CDATA[// Appends selected characters from the current string builder to the selected string builder
METHOD Split : I_StringBuilder
VAR_INPUT
	Position, Length : T_Size;
	ipStringBuilder : I_StringBuilder;
END_VAR]]></Declaration>
    </Method>
    <Method Name="StrinkToFit" Id="{071ba2b7-38d2-4267-be28-53ec29f36e1f}">
      <Declaration><![CDATA[// Reduces the capacity of the string builder to match the size of its contents, potentially reducing memory usage.
METHOD StrinkToFit : I_StringBuilder]]></Declaration>
    </Method>
    <Method Name="ToLowercase" Id="{6513716f-70f4-45e0-991c-ec8d32177933}">
      <Declaration><![CDATA[// Converts all alphabetic characters in string builder to lowercase characters
METHOD ToLowercase : I_StringBuilder
VAR_INPUT
END_VAR
]]></Declaration>
    </Method>
    <Method Name="ToUppercase" Id="{18bacf23-80be-4f43-a001-26ceb23edef2}">
      <Declaration><![CDATA[// Converts all alphabetic characters in string builder to uppercase characters
METHOD ToUppercase : I_StringBuilder
VAR_INPUT
END_VAR]]></Declaration>
    </Method>
  </Itf>
</TcPlcObject>