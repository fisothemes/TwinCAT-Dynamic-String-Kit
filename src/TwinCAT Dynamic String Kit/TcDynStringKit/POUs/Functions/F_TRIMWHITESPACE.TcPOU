<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="F_TrimWhiteSpace" Id="{80540fe8-fd57-4c87-b581-1472dc410037}" SpecialFunc="None">
    <Declaration><![CDATA[// Removes all ASCII white space (spaces, tabs, carriage returns, and linefeeds) from the start, end, or both ends of a string
FUNCTION F_TrimWhiteSpace
VAR_INPUT
	sValue : REFERENCE TO STRING; // String of any size
	Location : T_WhitespaceLocation;
END_VAR
VAR
	Start, End, Length, StrLen : T_Size := 0;
	pValue : POINTER TO STRING;
	bMalloced : BOOL := TRUE;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[Length := StrLen := F_StrLen(ADR(sValue));

IF Length = 0 THEN RETURN; END_IF
End := Length - 1;

CASE Location OF
	T_WhitespaceLocation.Start:
		
		WHILE ((Start <= End) AND F_IsSpace(F_ByteToChar(sValue[Start]))) DO Start := Start + 1; END_WHILE
	T_WhitespaceLocation.End: 
		WHILE ((End >= Start) AND F_IsSpace(F_ByteToChar(sValue[End]))) DO End := End - 1; END_WHILE
	T_WhitespaceLocation.Both:
		WHILE ((Start <= End) AND F_IsSpace(F_ByteToChar(sValue[Start]))) DO Start := Start  + 1; END_WHILE
		WHILE ((End >= Start) AND F_IsSpace(F_ByteToChar(sValue[End]))) DO End := End - 1; END_WHILE
ELSE
	RETURN;
END_CASE

Length := End - Start + 1;
F_MemMove(ADR(sValue), ADR(sValue[Start]), Length);
sValue[Length] := 0;]]></ST>
    </Implementation>
    <LineIds Name="F_TrimWhiteSpace">
      <LineId Id="112" Count="19" />
      <LineId Id="60" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>