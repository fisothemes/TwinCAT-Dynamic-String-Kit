<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="FB_Read_Only_String_Builder_Adapter" Id="{5b2f76d6-71b2-41fd-9735-b5916830d938}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Read_Only_String_Builder_Adapter IMPLEMENTS I_Read_Only_String_Builder_Adapter
VAR_INPUT
	ipString_Builder : I_String_Builder;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="_Capacity" Id="{5e804c55-c620-4d22-a532-fbaedf7e33f3}">
      <Declaration><![CDATA[(* Number of bytes allocated in memory for the string builder's contents.*)
PROPERTY _Capacity : T_Size
]]></Declaration>
      <Get Name="Get" Id="{a02353a6-8f43-4024-b756-1b601822b353}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF THIS^.ipString_Builder = 0 THEN RETURN; END_IF
_Capacity := THIS^.ipString_Builder._Capacity;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="_Length" Id="{47428ebe-0553-4546-9fa2-3c3da99dd0e5}">
      <Declaration><![CDATA[(* Current size of string builder contents*)
PROPERTY _Length : T_Size
]]></Declaration>
      <Get Name="Get" Id="{f03399eb-acc0-45e6-b564-02633cd162e1}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF THIS^.ipString_Builder = 0 THEN RETURN; END_IF
_Length := THIS^.ipString_Builder._Length;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Copy_Substring_To" Id="{e52e47a2-b7cb-4fc2-937d-d79a7dd6f1c1}">
      <Declaration><![CDATA[(* Copies a subset of characters in the string builder from specified position at specified length to a string*)
METHOD Copy_Substring_To : I_Read_Only_String_Builder_Adapter
VAR_INPUT
	Position, Length : T_Size;
	Value : ANY;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Copy_Substring_To := THIS^;
IF THIS^.ipString_Builder = 0 THEN RETURN; END_IF
THIS^.ipString_Builder.Copy_Substring_To(Position, Length, Value);]]></ST>
      </Implementation>
    </Method>
    <Method Name="Copy_To" Id="{cd0ca31a-3a35-4a56-9e9a-84c2c0a452e5}">
      <Declaration><![CDATA[(* Copies contents of string builder to given string of any size*)
METHOD Copy_To : I_Read_Only_String_Builder_Adapter
VAR_INPUT
	Value : ANY;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Copy_To := THIS^;
IF THIS^.ipString_Builder = 0 THEN RETURN; END_IF
THIS^.ipString_Builder.Copy_To(Value);]]></ST>
      </Implementation>
    </Method>
    <Method Name="Get_Buffer" Id="{0e58de1f-9791-406a-84d4-e5bae5496810}">
      <Declaration><![CDATA[(* !!!UNSAFE!!! DON'T FORGET TO RELEASE/DELETE FROM	MEMORY WHEN DONE!
 | Get a copy of the internal string buffer at the size of the string length + 1.*)
METHOD Get_Buffer : I_Read_Only_String_Builder_Adapter
VAR_IN_OUT
	pBuffer	: POINTER TO BYTE;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Get_Buffer := THIS^;
IF THIS^.ipString_Builder = 0 THEN RETURN; END_IF
THIS^.ipString_Builder.Get_Buffer(pBuffer);]]></ST>
      </Implementation>
    </Method>
    <Method Name="Get_Capacity" Id="{e0b2a79e-d112-46c1-a77e-9c5f7b9fc05b}">
      <Declaration><![CDATA[(* Retrieves the number of bytes allocated in memory for the string builder's contents.*)
METHOD Get_Capacity : I_Read_Only_String_Builder_Adapter
VAR_OUTPUT
	Capacity	: T_Size;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Get_Capacity := THIS^;
Capacity := THIS^._Capacity;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Get_Char" Id="{1af0a8ac-26b2-40b7-8c19-3ef6ce240260}">
      <Declaration><![CDATA[(* Gets character at specified position in the string builder*)
METHOD Get_Char : T_Char
VAR_INPUT
	Position	: T_Size;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF THIS^.ipString_Builder = 0 THEN RETURN; END_IF
Get_Char := THIS^.ipString_Builder.Get_Char(Position);]]></ST>
      </Implementation>
    </Method>
    <Method Name="Get_Length" Id="{84f2c33b-4773-4941-aceb-9877e5a12da1}">
      <Declaration><![CDATA[(* Retrieves the current size of string builder contents*)
METHOD Get_Length : I_Read_Only_String_Builder_Adapter
VAR_OUTPUT
	Length	: T_Size;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Get_Length := THIS^;
Length := THIS^._Length;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Get_String" Id="{65690ebe-27e3-45fa-ab0e-48130b75ef40}">
      <Declaration><![CDATA[(* Converts contents of string builder to string and returns them*)
METHOD Get_String : T_Long_String
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF THIS^.ipString_Builder = 0 THEN RETURN; END_IF
Get_String := THIS^.ipString_Builder.Get_String();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Get_Substring" Id="{9fa3ecbe-5e9c-4351-b490-0efbc9d44201}">
      <Declaration><![CDATA[(* Get a subset of characters in the string builder from specified position at specified length and returns them as a string*)
METHOD Get_Substring : T_Long_String
VAR_INPUT
	Position	: T_Size;
	Length	: T_Size;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF THIS^.ipString_Builder = 0 THEN RETURN; END_IF
Get_Substring := THIS^.ipString_Builder.Get_Substring(Position, Length);]]></ST>
      </Implementation>
    </Method>
    <Method Name="Search" Id="{cad7533e-4311-4c28-a285-5b01561ebfe0}">
      <Declaration><![CDATA[(* Finds the position of the first instance of a given string in the content's of the string builder from a starting position*)
METHOD Search : I_Read_Only_String_Builder_Adapter
VAR_INPUT
	sValue	: T_Long_String;
	Start_Position	: T_Size;
END_VAR
VAR_OUTPUT
	Position	: T_Size;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Search := THIS^;
IF THIS^.ipString_Builder = 0 THEN RETURN; END_IF
THIS^.ipString_Builder.Search(sValue, Start_Position, Position => Position);]]></ST>
      </Implementation>
    </Method>
    <Method Name="Search_Any" Id="{67b278b9-ea26-4100-9ab4-f6713e4518df}">
      <Declaration><![CDATA[(* Finds the position of the first instance of a given value in the content's of the string builder from a starting position*)
METHOD Search_Any : I_Read_Only_String_Builder_Adapter
VAR_INPUT
	Value : ANY;
	Start_Position : T_Size;
END_VAR
VAR_OUTPUT
	Position : T_Size := -1;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Search_Any := THIS^;
IF THIS^.ipString_Builder = 0 THEN RETURN; END_IF
THIS^.ipString_Builder.Search_Any(Value, Start_Position, Position => Position);]]></ST>
      </Implementation>
    </Method>
    <Method Name="Split" Id="{90821461-a891-4b50-8400-5b7b505302ad}">
      <Declaration><![CDATA[(* Appends selected characters from the current string builder to the selected string builder*)
METHOD Split : I_Read_Only_String_Builder_Adapter
VAR_INPUT
	Position : T_Size;
	Length : T_Size;
	ipString_Builder : I_String_Builder;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Split := THIS^;
IF THIS^.ipString_Builder = 0 THEN RETURN; END_IF
THIS^.ipString_Builder.Split(Position, Length, ipString_Builder);]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Read_Only_String_Builder_Adapter">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_Read_Only_String_Builder_Adapter._Capacity.Get">
      <LineId Id="2" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Read_Only_String_Builder_Adapter._Length.Get">
      <LineId Id="2" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Read_Only_String_Builder_Adapter.Copy_Substring_To">
      <LineId Id="28" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="29" Count="0" />
    </LineIds>
    <LineIds Name="FB_Read_Only_String_Builder_Adapter.Copy_To">
      <LineId Id="22" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="23" Count="0" />
    </LineIds>
    <LineIds Name="FB_Read_Only_String_Builder_Adapter.Get_Buffer">
      <LineId Id="10" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="11" Count="0" />
    </LineIds>
    <LineIds Name="FB_Read_Only_String_Builder_Adapter.Get_Capacity">
      <LineId Id="9" Count="1" />
    </LineIds>
    <LineIds Name="FB_Read_Only_String_Builder_Adapter.Get_Char">
      <LineId Id="8" Count="1" />
    </LineIds>
    <LineIds Name="FB_Read_Only_String_Builder_Adapter.Get_Length">
      <LineId Id="8" Count="1" />
    </LineIds>
    <LineIds Name="FB_Read_Only_String_Builder_Adapter.Get_String">
      <LineId Id="5" Count="1" />
    </LineIds>
    <LineIds Name="FB_Read_Only_String_Builder_Adapter.Get_Substring">
      <LineId Id="9" Count="1" />
    </LineIds>
    <LineIds Name="FB_Read_Only_String_Builder_Adapter.Search">
      <LineId Id="13" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="14" Count="0" />
    </LineIds>
    <LineIds Name="FB_Read_Only_String_Builder_Adapter.Search_Any">
      <LineId Id="30" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="31" Count="0" />
    </LineIds>
    <LineIds Name="FB_Read_Only_String_Builder_Adapter.Split">
      <LineId Id="11" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="12" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>